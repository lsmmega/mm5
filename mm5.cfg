MEMORY {
	ROMH:  start = $0,    size = $10, fill = yes;
	ROM00: start = $0,    size = $2000;
	ROM01: start = $0,    size = $2000;
	ROM02: start = $0,    size = $2000;
	ROM03: start = $0,    size = $2000;
	ROM04: start = $0,    size = $2000;
	ROM05: start = $0,    size = $2000;
	ROM06: start = $0,    size = $2000;
	ROM07: start = $0,    size = $2000;
	ROM08: start = $0,    size = $2000;
	ROM09: start = $0,    size = $2000;
	ROM0A: start = $0,    size = $2000;
	ROM0B: start = $0,    size = $2000;
	ROM0C: start = $0,    size = $2000;
	ROM0D: start = $0,    size = $2000;
	ROM0E: start = $0,    size = $2000;
	ROM0F: start = $0,    size = $2000;
	ROM10: start = $0,    size = $2000;
	ROM11: start = $0,    size = $2000;
	ROM12: start = $0,    size = $2000;
	ROM13: start = $0,    size = $2000;
	ROM14: start = $0,    size = $2000;
	ROM15: start = $0,    size = $2000;
	ROM16: start = $0,    size = $2000;
	ROM17: start = $0,    size = $2000;
	ROM18: start = $8000, size = $6000;
	ROM1B: start = $0,    size = $2000;
	ROM1C: start = $0,    size = $2000;
	ROM1D: start = $0,    size = $2000;
	ROM1E: start = $0,    size = $4000;
	ROMG:  start = $0,    size = $40000;
}

SEGMENTS {
	HEADER: load = ROMH,  type = ro;
	BANK00: load = ROM00, type = ro;
	BANK01: load = ROM01, type = ro;
	BANK02: load = ROM02, type = ro;
	BANK03: load = ROM03, type = ro;
	BANK04: load = ROM04, type = ro;
	BANK05: load = ROM05, type = ro;
	BANK06: load = ROM06, type = ro;
	BANK07: load = ROM07, type = ro;
	BANK08: load = ROM08, type = ro;
	BANK09: load = ROM09, type = ro;
	BANK0A: load = ROM0A, type = ro;
	BANK0B: load = ROM0B, type = ro;
	BANK0C: load = ROM0C, type = ro;
	BANK0D: load = ROM0D, type = ro;
	BANK0E: load = ROM0E, type = ro;
	BANK0F: load = ROM0F, type = ro;
	BANK10: load = ROM10, type = ro;
	BANK11: load = ROM11, type = ro;
	BANK12: load = ROM12, type = ro;
	BANK13: load = ROM13, type = ro;
	BANK14: load = ROM14, type = ro;
	BANK15: load = ROM15, type = ro;
	BANK16: load = ROM16, type = ro;
	BANK17: load = ROM17, type = ro;
	BANK18: load = ROM18, type = ro;
	BANK1B: load = ROM1B, type = ro;
	BANK1C: load = ROM1C, type = ro;
	BANK1D: load = ROM1D, type = ro;
	HOME:   load = ROM1E, type = ro;
	GFX:    load = ROMG,  type = ro;
}
